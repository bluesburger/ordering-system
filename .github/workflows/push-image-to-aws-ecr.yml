name: "Push Docker Image to AWS ECR"

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      aws_account_id:
        description: AWS Account ID
        type: string
      image_tag:
        description: Tag to apply to images.
        type: string
        default: latest
      docker_build_dir:
        description: Docker build directory (default = '.')
        default: "."
        type: string
      path_to_dockerfile:
        description: Path to the dockerfile (default = 'Dockerfile')
        default: "Dockerfile"
        type: string

jobs:
  docker:
      runs-on: ubuntu-latest

      permissions:
        id-token: write
        contents: read
  
      outputs:
        image_tag: ${{ steps.build-publish.outputs.image_tag }}
        full_image: ${{ steps.build-publish.outputs.full_image }}
      
      steps:
        - uses: actions/checkout@v3

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
          with:
            registries: ${{ inputs.aws_account_id }}
            mask-password: "true" # see: https://github.com/aws-actions/amazon-ecr-login#docker-credentials

        - name: Build, tag, and push image to Amazon ECR
          id: build-publish
          shell: bash
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ env.ECR_REPO_NAME }}
            IMAGE_TAG: ${{ inputs.image_tag }}
          run: |
            docker build "${{ inputs.docker_build_dir }}" -f "${{ inputs.path_to_dockerfile }}" -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
            docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
            echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
            echo "image_tag=$IMAGE_TAG" 
            echo "full_image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"